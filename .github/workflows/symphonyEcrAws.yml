name: Docker Image CI

on:
  push:
    branches: 
      - main
  pull_request:
    branches: [ main ]

jobs:

  build-artifact:
    name: build ${{ matrix.image }}
    runs-on: ubuntu-latest

    env: 
      ECR_REGISTRY: 837232691946.dkr.ecr.us-east-2.amazonaws.com
      ECR_REPOSITORY: symphony-ecr-aws
      IMAGE_TAG: V1.0

    strategy:
      matrix:
        include:
          - image: graph
            context: .
            file: graph/Dockerfile

    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Configure AWS Credentials for build and deploy ECR 31
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.ECR_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Amazon ECR "Login" Action for GitHub Actions
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: login ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: docker images
        run: docker images

      #- name: docker tag
      #  run: docker tag graph $ECR_REGISTRY/$ECR_REPOSITORY:graph_$IMAGE_TAG
      
      - name: docker push
        #run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:graph_$IMAGE_TAG

        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          tags: 37232691946.dkr.ecr.us-east-2.amazonaws.com/symphony-ecr-aws:${{ matrix.image }}_v1.0
          pull: true
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

